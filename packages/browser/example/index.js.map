{"version":3,"file":"index.js","sources":["../../utils/src/object.ts","../../utils/src/node.ts","../../utils/src/browser.ts","../../utils/src/logger.ts","../../utils/src/trycatch.ts","../../utils/src/error.ts","../../core/src/subscribe.ts","../../core/src/transport.ts","../src/client.ts","../../core/src/client.ts","../src/utils.ts","../src/transport/fetch.ts","../src/transport/xhr.ts","../src/integration/globalhandler.ts","../src/integration/dom.ts","../../utils/src/throtte.ts","../src/index.ts"],"sourcesContent":["import { isNodeEnv } from './node';\n\nconst fallbackGlobalObject = {};\n\nexport function getGlobalObject<T>(): T {\n  return (isNodeEnv() ? global : typeof window !== 'undefined' ? window : fallbackGlobalObject) as T;\n}\n\nexport function fill(global: any, key: string, cb: (data: any) => any) {\n  const origin = global[key] as () => void;\n  const wrapped = cb(origin);\n  if (typeof origin == 'function') {\n    try {\n      wrapFunc(wrapped, origin);\n    } catch (error) {\n      // _sendAndCapture(error);\n    }\n  }\n  global[key] = wrapped;\n}\n\nexport function wrapFunc(wrapped: any, original: any) {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n}\n","export function isNodeEnv() {\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === 'process object';\n}\n","import { getGlobalObject } from './object';\n\nenum Severity {\n  JS_ERROR,\n}\n\nenum ErrorTypes {\n  UNKNOWN_FUNCTION,\n}\n\nexport function getTimestamp() {\n  return Date.now();\n}\n\nexport function getUrlWithEnv() {\n  return '';\n}\n\nexport function extractErrorStack(ex: any, level: Severity) {\n  const normal = {\n    time: getTimestamp(),\n    url: getUrlWithEnv(),\n    name: ex.name,\n    level,\n    message: ex.message,\n  };\n  if (typeof ex.stack === 'undefined' || !ex.stack) {\n    return normal;\n  }\n\n  const chrome =\n      /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\n    gecko =\n      /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i,\n    winjs =\n      /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n    // Used to additionally parse URL/line/column from eval frames\n    geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i,\n    chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/,\n    lines = ex.stack.split('\\n'),\n    stack = [];\n\n  let submatch, parts, element;\n  // reference = /^(.*) is undefined$/.exec(ex.message)\n\n  for (let i = 0, j = lines.length; i < j; ++i) {\n    if ((parts = chrome.exec(lines[i]))) {\n      const isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n      const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n      if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n        parts[3] = submatch[2]; // line\n        parts[4] = submatch[3]; // column\n      }\n      element = {\n        url: !isNative ? parts[2] : null,\n        func: parts[1] || ErrorTypes.UNKNOWN_FUNCTION,\n        args: isNative ? [parts[2]] : [],\n        line: parts[3] ? +parts[3] : null,\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = winjs.exec(lines[i]))) {\n      element = {\n        url: parts[2],\n        func: parts[1] || ErrorTypes.UNKNOWN_FUNCTION,\n        args: [],\n        line: +parts[3],\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = gecko.exec(lines[i]))) {\n      const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n      if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n        // throw out eval line/coluqqqqqqqqqqqqqqqqqqqqqqqqqqqqmn and use top-most line number\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        //   parts[5] = null; // no column when eval\n        parts[5] = '';\n      } else if (i === 0 && !parts[5] && typeof ex.columnNumber !== 'undefined') {\n        // FireFox uses this awesome columnNumber property for its top frame\n        // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n        // so adding 1\n        // NOTE: this hack doesn't work if top-most frame is eval\n        stack[0].column = ex.columnNumber + 1;\n      }\n      element = {\n        url: parts[3],\n        func: parts[1] || ErrorTypes.UNKNOWN_FUNCTION,\n        args: parts[2] ? parts[2].split(',') : [],\n        line: parts[4] ? +parts[4] : null,\n        column: parts[5] ? +parts[5] : null,\n      };\n    } else {\n      continue;\n    }\n\n    if (!element.func && element.line) {\n      element.func = ErrorTypes.UNKNOWN_FUNCTION;\n    }\n\n    stack.push(element);\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n  return {\n    ...normal,\n    stack: stack,\n  };\n}\n\nexport function getLocationHref() {\n  const global = getGlobalObject<Window>();\n  return global.location.href;\n}\n\nexport function supportsFetch(): boolean {\n  const global = getGlobalObject<Window>();\n  return typeof global.fetch != 'undefined';\n}","export const CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] as const;\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<typeof CONSOLE_LEVELS[number], LoggerMethod>;\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n}\n\nfunction consoleSandBox<T>(fn: () => T) {\n  const global = window;\n  const originalConsole = global.console as Console & Record<string, unknown>;\n  const wrappedLevels: Partial<LoggerConsoleMethods> = {};\n\n  // restore\n  CONSOLE_LEVELS.forEach(\n    level =>\n      // const originalWrappedFunc =\n      (wrappedLevels[level] = originalConsole[level] as LoggerConsoleMethods[typeof level]),\n  );\n\n  try {\n    return fn();\n  } finally {\n    Object.keys(wrappedLevels).forEach(level => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      originalConsole[level] = wrappedLevels[level] as typeof CONSOLE_LEVELS[number];\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enable = false;\n  const logger: Partial<Logger> = {\n    enable() {\n      enable = true;\n    },\n    disable() {\n      enable = false;\n    },\n  };\n  CONSOLE_LEVELS.forEach(name => {\n    logger[name] = (...args: any[]) => {\n      if (enable) {\n        consoleSandBox(global.console[name](`Logger [${name}:]`, ...args) as any);\n      }\n    };\n  });\n  return logger as Logger;\n}\n\nconst logger: Logger = makeLogger();\n\nexport { logger };\n","export function nativeTrycatch(fn: () => void, errorFn: (err: any) => void) {\n  try {\n    fn();\n  } catch (err) {\n    console.error('err', err);\n    if (errorFn) {\n      errorFn(err);\n    }\n  }\n}\n\nexport function wrap(fn: unknown): void {\n  if (!fn || typeof fn !== 'function') {\n    return;\n  }\n\n  nativeTrycatch(fn as () => void, err => {\n    console.error(err);\n  });\n}\n","export const enum ErrorTypes {\n  UNKNOWN = 'UNKNOWN',\n  UNKNOWN_FUNCTION = 'UNKNOWN_FUNCTION',\n  JAVASCRIPT = 'JAVASCRIPT',\n  LOG = 'LOG',\n  HTTP = 'HTTP',\n  VUE = 'VUE',\n  REACT = 'REACT',\n  RESOURCE = 'RESOURCE',\n  PROMISE = 'PROMISE',\n  ROUTE = 'ROUTE',\n}\n","import { nativeTrycatch, logger } from '@aegis/utils';\n\ntype MonitorCallback = (data: any) => void;\n\nexport class Subscribe {\n  private dep = new Map<string, MonitorCallback[]>();\n\n  watch(name: string, fns: any) {\n    this.dep.set(name, fns);\n  }\n\n  notify(name: string, data: any) {\n    const fns = this.dep.get(name);\n    if (!fns) return;\n    fns.forEach(fn => {\n      nativeTrycatch(\n        () => {\n          fn(data);\n        },\n        (err: Error) => {\n          logger.error('subcribe error: ', err);\n        },\n      );\n    });\n  }\n}\n","import { logger } from '@aegis/utils/src';\n\nimport { EnvelopeItem, TransportOptionsFieldsType } from '@aegis/types/src';\nimport { Transport } from '@aegis/types';\n\n// 限制请求的 buffer []\nexport function makeRequestBuff(limits: number) {\n  const buffer = [] as PromiseLike<unknown>[];\n\n  function isReady(): boolean {\n    return buffer.length < limits;\n  }\n\n  function remove(task: Promise<unknown>) {\n    return buffer.splice(buffer.indexOf(task), 1);\n  }\n\n  function add<T = unknown>(requestTask: () => Promise<T>): PromiseLike<unknown> {\n    if (!isReady()) {\n      return new Promise(resolve => resolve(new Error('over rate limits.')));\n    }\n    const task = requestTask();\n    const taskIdx = buffer.indexOf(task);\n    if (taskIdx == -1) {\n      buffer.push(task);\n    }\n    return task.then(() => remove(task)).then(null, () => remove(task));\n  }\n\n  return {\n    buffer,\n    add,\n  };\n}\n\nexport class BaseTransport<O extends TransportOptionsFieldsType = TransportOptionsFieldsType> implements Transport {\n  options: O;\n  constructor(options: O) {\n    this.options = options;\n  }\n\n  public send<T>(envelope: EnvelopeItem): PromiseLike<T> {\n    const { makeRequest, requestBuffer = makeRequestBuff(100) } = this.options;\n    console.log(envelope, 999);\n    const requestTask = () =>\n      makeRequest(envelope).then(\n        response => {\n          if (response.statusCode != undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            logger.warn('fetch error');\n          }\n        },\n        error => {\n          logger.error('fetch failed', error);\n        },\n      );\n    return requestBuffer.add(requestTask);\n  }\n}\n","import { BaseClient, BaseTransport } from '@aegis/core/src';\nimport { getLocationHref, getTimestamp } from '@aegis/utils/src';\nimport { BrowserOptionsFieldsType, LogTypes } from '@aegis/types/src';\nimport { makeDsn } from './utils';\nimport { makeXHRTransport, makeFetchTransport } from './transport';\nimport { getGlobalObject } from '@aegis/utils';\n\nexport class BrowserClient extends BaseClient {\n  transport: BaseTransport;\n  options: BrowserOptionsFieldsType;\n  constructor(options: BrowserOptionsFieldsType) {\n    super(options);\n    this.options = {\n      ...options,\n    };\n\n    const transportOptions = {\n      dsn: makeDsn(options.dsn),\n    };\n\n    const global = getGlobalObject<Window>();\n\n    // 降级处理\n    this.transport =\n      typeof global['fetch'] == 'function'\n        ? makeFetchTransport(transportOptions, global['fetch'])\n        : makeXHRTransport(transportOptions);\n  }\n\n  // 手动上报\n  public log(data: LogTypes) {\n    const { name = 'log', message = '', type = 'normal', level = 'info' } = data;\n\n    const error = {\n      type,\n      level,\n      message,\n      name,\n      url: getLocationHref(),\n      time: getTimestamp(),\n    };\n\n    const requestOptions = {\n      body: error\n    };\n\n    this.transport.send(requestOptions);\n  }\n}\n","import { BaseClientType, BaseHandlerType, BaseOptionsFieldsType, EventTypes } from '@aegis/types';\nimport { Transport } from '@aegis/types/src';\nimport { Subscribe } from './subscribe';\n\nexport type ClientOptions = {\n  dsn: string;\n  transport: () => void;\n};\n\nexport abstract class BaseClient<\n  O extends BaseOptionsFieldsType = BaseOptionsFieldsType,\n  E extends EventTypes = EventTypes,\n> implements BaseClientType\n{\n  public options: O;\n  public transport: Transport = null as any;\n  public dsn = '';\n\n  constructor(options: O) {\n    this.options = options;\n    if (options.dsn) {\n      this.dsn = options.dsn;\n    }\n  }\n\n  use(handlers: BaseHandlerType<E>[]) {\n    const sub = new Subscribe();\n    handlers.forEach(handler => {\n      handler.monitor.call(this, sub.notify.bind(sub));\n      const wrapFn = (...args: any[]) => {\n        const result = handler.transform?.call(this, args);\n        handler.consumer?.call(this, result);\n      };\n      sub.watch(handler.name, wrapFn);\n    });\n  }\n}\n","export function makeDsn(dsn: string): string {\n  if (dsn.includes('xxx')) {\n    return 'xxx' + dsn;\n  }\n\n  return dsn;\n}\n","import { BaseTransport } from '@aegis/core/src';\nimport { TransportMakeRequestResponse } from '@aegis/types';\n\nexport function makeFetchTransport(options: any, nativeFetch: (request: any, options: any) => PromiseLike<unknown>) {\n  function makeRequest(request: any): PromiseLike<TransportMakeRequestResponse> {\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options?.headers,\n      keepalive: request.body.length <= 65536,\n      ...options.fetchOptions,\n    };\n    return nativeFetch(options.dsn, requestOptions).then((response: any) => ({\n          statusCode: response.status,\n        })\n    );\n  }\n\n  return new BaseTransport({\n    dsn: options.dsn,\n    makeRequest,\n  });\n}","import { BaseTransport } from '@aegis/core/src';\nimport { TransportMakeRequestResponse } from '@aegis/types/src';\n\nconst XHR_READYSTATE_DONE = 4;\n\nexport function makeXHRTransport(options: any) {\n  function makeRequest(request: any): PromiseLike<TransportMakeRequestResponse> {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = (): void => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status\n          });\n        }\n      };\n\n      xhr.open('POST', options?.url || options.dsn);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return new BaseTransport({\n    makeRequest,\n    dsn: options.dsn,\n  });\n}\n","import { BaseHandlerType } from '@aegis/types/src';\nimport { getLocationHref, getGlobalObject, getTimestamp } from '@aegis/utils';\nimport { ErrorTypes } from '@aegis/utils/src';\n\nconst global = getGlobalObject<Window>();\n\nexport const ErrorHandler: BaseHandlerType = {\n  name: 'error',\n  monitor(notify: any) {\n    const handler = (event: ErrorEvent) => {\n      notify(event.error);\n    };\n    global.addEventListener('error', handler, true);\n  },\n  transform(target: any) {\n    if (target.localName) {\n      return _getResourceMessage(target);\n    }\n    return _getCodeErrorMessage(target);\n  },\n  consumer(data: any) {\n    this.transport.send(data);\n  },\n};\n\nfunction _getResourceMessage(target: any) {\n  return {\n    type: ErrorTypes.RESOURCE,\n    url: getLocationHref(),\n    message: target.src + target.href,\n    level: 'low',\n    time: getTimestamp(),\n    name: target.localName,\n  };\n}\n\nfunction _getCodeErrorMessage(target: any) {\n  return {\n    type: ErrorTypes.RESOURCE,\n    url: getLocationHref(),\n    message: target.src + target.href,\n    level: 'low',\n    time: getTimestamp(),\n    name: target.localName,\n  };\n}\n\nexport const UnhandledRejectionHandler: BaseHandlerType = {\n  name: 'unhandlerrejection',\n  monitor(notify) {\n    const _unhandledrejectionHanlder = (event: any) => {\n      notify(event);\n    };\n    global.addEventListener('unhandledrejection', _unhandledrejectionHanlder, true);\n  },\n  transform(target: any) {\n    let error = target;\n    try {\n      error = target.reason;\n    } catch (e) {\n      // do nothing\n    }\n    return {\n      type: ErrorTypes.PROMISE,\n      message: error,\n      url: getLocationHref(),\n      name: target.type,\n      time: getTimestamp(),\n      level: 'low',\n    };\n  },\n  consumer(data) {\n    this.transport.send(data);\n  },\n};\n","import { BaseHandlerType } from '@aegis/types';\nimport { WrappedFunction } from '@aegis/types/src';\nimport { getGlobalObject, fill, wrap } from '@aegis/utils';\nimport { throttle } from '@aegis/utils/src';\n\nexport const DOMhandler: BaseHandlerType = {\n  name: 'dom',\n  monitor(notify) {\n    const clickThrottle = throttle(notify, 300);\n    _wrapEventTarget('click', clickThrottle);\n  },\n  transform(target) {\n    return target.error;\n  },\n  consumer(data) {\n    this.transport.send(data);\n  },\n};\n\nfunction _wrapEventTarget(target: string, notify: (event: string, data?: any) => void): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const global = getGlobalObject() as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = global[target] && global[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: () => void): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      // report data\n      const wrapped = () => {\n        notify(eventName, {\n          category: eventName,\n          data: this,\n        });\n        wrap(fn as any);\n      };\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrapped,\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n          // eslint-disable-next-line no-empty\n        } catch (e) {}\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n","export function throttle(fn: any, timeout?: number): () => void {\n  let enable = true;\n  return function (...args) {\n    if (!enable) return;\n    enable = false;\n    setTimeout(() => {\n      typeof fn == 'function' && fn(args);\n      enable = true;\n    }, timeout);\n  };\n}\n","import { BrowserOptionsFieldsType } from '@aegis/types/src';\nimport { BrowserClient } from './client';\nimport { DOMhandler, ErrorHandler, UnhandledRejectionHandler } from './integration';\n\nfunction createInstance(options: BrowserOptionsFieldsType) {\n  const browser = new BrowserClient(options);\n  const plugins = [DOMhandler, ErrorHandler, UnhandledRejectionHandler];\n  browser.use(plugins);\n  return browser;\n}\n\nexport { BrowserClient, createInstance };\n"],"names":["fallbackGlobalObject","getGlobalObject","Object","prototype","toString","call","process","global","window","fill","key","cb","origin","wrapped","original","proto","error","Severity","ErrorTypes","getTimestamp","Date","now","getLocationHref","location","href","JS_ERROR","UNKNOWN_FUNCTION","CONSOLE_LEVELS","logger","enable","disable","forEach","name","args","fn","originalConsole","console","wrappedLevels","level","keys","nativeTrycatch","errorFn","err","UNKNOWN","JAVASCRIPT","LOG","HTTP","VUE","REACT","RESOURCE","PROMISE","ROUTE","Subscribe","constructor","this","dep","Map","watch","fns","set","notify","data","get","makeRequestBuff","limits","buffer","remove","task","splice","indexOf","add","requestTask","length","Promise","resolve","Error","push","then","BaseTransport","options","send","envelope","makeRequest","requestBuffer","log","response","undefined","statusCode","warn","BrowserClient","transport","dsn","use","handlers","sub","handler","monitor","bind","result","_a","transform","_b","consumer","super","assign","transportOptions","includes","fetch","nativeFetch","request","requestOptions","body","method","referrerPolicy","headers","keepalive","fetchOptions","status","reject","xhr","XMLHttpRequest","onerror","onreadystatechange","readyState","open","url","header","hasOwnProperty","setRequestHeader","message","type","time","ErrorHandler","addEventListener","event","target","localName","src","UnhandledRejectionHandler","reason","e","DOMhandler","eventName","apply","category","originalRemoveEventListener","wrappedEventHandler","originalEventHandler","timeout","setTimeout","browser","plugins"],"mappings":"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"}